{"version":3,"sources":["Components/ContactsItem/ContactsItem.module.css","Components/ContactsItem/ContactsItem.jsx","Components/ContactsList/ContactsList.jsx","Components/Form/Form.jsx","Components/Filter/Filter.jsx","App.js","index.js","Components/Form/Form.module.css","Components/Filter/Filter.module.css","Components/ContactsList/ContactsList.module.css"],"names":["module","exports","ContactsItem","name","number","id","onDeleteContact","type","onClick","className","s","btn","ContactsList","contacts","map","item","Form","onSubmit","useState","setName","setNumber","handleChange","e","currentTarget","value","form","preventDefault","label","placeholder","pattern","title","required","onChange","input","Filter","App","setContacts","filter","setFilter","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","duplicate","find","contact","alert","prevState","normalizedFilter","toLowerCase","includes","getVisibleContacts","contactId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8b45964.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactsItem_btn__9Kz33\"};","import React from \"react\";\nimport s from \"./ContactsItem.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ContactsItem = ({ name, number, id, onDeleteContact }) => {\n  return (\n    <>\n      <p>{name + \": \" + number}</p>\n      <button\n        type=\"button\"\n        onClick={() => onDeleteContact(id)}\n        className={s.btn}\n      >\n        Delete\n      </button>\n    </>\n  );\n};\n\nContactsItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsItem;\n","import React from \"react\";\nimport s from \"./ContactsList.module.css\";\nimport ContactsItem from \"../ContactsItem/ContactsItem\";\nimport PropTypes from \"prop-types\";\n\nconst ContactsList = ({ contacts, onDeleteContact }) => {\n  return (\n    <>\n      <ul>\n        {contacts.map(({ name, number, id }) => (\n          <li key={id} className={s.item}>\n            <ContactsItem\n              name={name}\n              number={number}\n              id={id}\n              onDeleteContact={onDeleteContact}\n            />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport s from \"./Form.module.css\";\n\nexport default function Form({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(name, number);\n    setNumber(\"\");\n    setName(\"\");\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Alex Alex\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n          value={name}\n          className={s.input}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"+38(0XX)-XXX-XX-XX\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n          value={number}\n          className={s.input}\n        />\n      </label>\n      <button className={s.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport s from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <label className={s.label}>\n        Find contacts by name\n        <input\n          className={s.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  changefilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useState, useEffect } from \"react\";\nimport ContactsList from \"./Components/ContactsList/ContactsList\";\nimport Form from \"./Components/Form/Form\";\nimport Filter from \"./Components/Filter/Filter\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (contacts) {\n      setContacts(contacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    let duplicate = contacts.find((contact) => contact.name === name);\n\n    if (duplicate) {\n      alert(\"Такой контакт уже существует!\");\n    } else {\n      const contact = {\n        name,\n        number,\n      };\n\n      setContacts((prevState) => [contact, ...prevState]);\n    }\n  };\n\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts((prevState) =>\n      prevState.filter((contact) => contact.id !== contactId)\n    );\n  };\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <Form onSubmit={addContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactsList\n        contacts={getVisibleContacts()}\n        onDeleteContact={deleteContact}\n      />\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1rzz1\",\"input\":\"Form_input__2o61r\",\"label\":\"Form_label__tpriE\",\"btn\":\"Form_btn__25CTF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__19jWm\",\"input\":\"Filter_input__2CEsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsList_item__3sEFV\"};"],"sourceRoot":""}